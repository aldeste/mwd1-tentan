// Lobotomized owl applies margin top to every child element.
// http://alistapart.com/article/axiomatic-css-and-lobotomized-owls
* {
  margin: 0;

  + * {
    @extend %margin-top;
  }
}

%margin-top {
  margin-top: ratio(1, em);
}

%margin-top-off-on-children > *,
%margin-top-off {
  margin-top: 0;
}

%wrap {
  max-width: #{map-get($container, xlarge)}px;
  flex: 0 86.292vw;
}

// flexbox based grid system.
// Containers
%flex {
  display: flex;
}

%grid {
  @extend %flex;
  @extend %flex-flow__column-wrap;
  justify-content: space-between;

  @include media('>=small') {
    @extend %flex-flow__row-wrap;
  }
}

%flex-flow__column-wrap {
  flex-flow: column wrap;
}

%flex-flow__column-nowrap {
  flex-flow: column nowrap;
}

%flex-flow__row-wrap {
  flex-flow: row wrap;
}

%grid--space-around {
  justify-content: space-around;
}

%grid--center {
  @extend %flex;
  @extend %flex-flow__row-wrap;
  flex: 1 100vw;
  justify-content: center;
}

%grid--initial {
  justify-content: flex-start;
  align-content: flex-start;
}

%grid--end {
  justify-content: flex-end;
  align-content: flex-end;
}

%grid--center--v {
  @include media('>=small') {
    align-items: center;
  }
}

// Blocks
%grid__block {
  @include media('>=small') {
    margin-top: 0;
  }
}

%block--width--full {
  @include media('>=small') {
    flex: 100vw;
  }
}

$columns: 3;
@for $i from 1 to $columns + 1 {
  %block--width--#{$i} {
    flex: 0 calc(#{percentage($i / $columns)} - #{ratio(2, rem)});
  }
}

@for $i from 1 to $columns + 1 {
  %block--ratio--#{$i} {
    flex: ratio($i);
  }
}

%priority--last {
  @include media('>=small') {
    order: 10;
  }
}

%priority--important {
  @include media('>=small') {
    order: -10;
  }
}
