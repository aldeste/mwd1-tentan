@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,700&subset=latin,latin-ext);
@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400&subset=latin,latin-ext);
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -.5em; }

sub {
  bottom: -.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

::-moz-selection {
  color: rgba(240, 238, 236, 0.8);
  background: #255d38; }

::selection {
  color: rgba(240, 238, 236, 0.8);
  background: #255d38; }

:root {
  font-size: 1.125em; }

body {
  font: 400 1rem/1.5378 'Roboto', 'Helvetica Neue', Arial, sans-serif;
  color: #3c322b;
  -webkit-tap-highlight-color: rgba(240, 238, 236, 0.8); }

p,
li,
input,
textarea,
select,
label {
  font-weight: inherit;
  color: inherit;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  -webkit-font-variant-ligatures: normal;
          font-variant-ligatures: normal; }

.billboard__title,
.card__title,
.card__subtitle {
  font: 300 1.61803rem/1.3964 'Roboto Condensed', sans-serif;
  letter-spacing: -.03em;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  -webkit-font-variant-ligatures: common-ligatures;
          font-variant-ligatures: common-ligatures; }

.card__subtitle {
  font-size: 1rem; }

.billboard__title {
  font-size: 2.61803rem; }

.billboard__cta, .billboard__button--decline, .card__button,
.card__button--decline {
  color: rgba(240, 238, 236, 0.8); }

* {
  margin: 0; }

* + *, .switch:checked ~ .header__dropdown {
  margin-top: 1.61803em; }

.header__nav--head > *,
.header__nav--basic > *,
.footer,
.header,
.header__nav,
.header__dropdown,
.billboard,
.card,
.card__subtitle {
  margin-top: 0; }

.footer, .header__nav, .header__dropdown, .header__form, .billboard, #suggest-music-switch:checked ~ .billboard--attention, .billboard__content, .billboard__form, .grid--cards, .card, .card__img-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.footer, .card {
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }

.header__nav--offcanvas, .header__dropdown, .billboard__form {
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }

.billboard, .billboard__content, .grid--cards {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.header__action, .billboard__cta, .billboard__button--decline, .card__button,
.card__button--decline, .header__input,
.form__input,
.header__form {
  transition: all 150ms ease-in-out;
  box-shadow: 0 0 1rem 1.61803rem transparent, inset 0 0 atio(1, rem) transparent; }

.header__action:focus, .billboard__cta:focus, .billboard__button--decline:focus, .card__button:focus,
.card__button--decline:focus, .header__input:focus,
.form__input:focus,
.header__form:focus {
  border-color: #3fcc6f;
  outline: none;
  box-shadow: 0 0 2.61803rem rgba(11, 169, 65, 0.2), inset 0 0 0.1459rem #0ba941; }

.header__input,
.form__input {
  border-radius: .2em;
  padding: 0.23607rem 0.38197rem; }

.header__nav, #suggest-music-switch:checked ~ .billboard--attention, .billboard__content {
  -webkit-backdrop-filter: blur(0.3em);
          backdrop-filter: blur(0.3em); }

.billboard--default, .card__button--cta {
  background-image: url("../img/drk-ptrn.png");
  background-repeat: repeat;
  background-attachment: fixed;
  background-position: center center; }

.switch:checked ~ .header__nav--head .hamburger::before {
  -webkit-transform: translateY(0.21em) rotate(-45deg);
      -ms-transform: translateY(0.21em) rotate(-45deg);
          transform: translateY(0.21em) rotate(-45deg); }

.switch:checked ~ .header__nav--head .hamburger::after {
  -webkit-transform: translateY(-0.21em) rotate(45deg);
      -ms-transform: translateY(-0.21em) rotate(45deg);
          transform: translateY(-0.21em) rotate(45deg); }

.hamburger {
  display: inline-block;
  width: 1em;
  height: .55em;
  margin-left: 1em;
  vertical-align: middle; }

.hamburger::before,
.hamburger::after {
  display: block;
  width: 100%;
  height: .11em;
  margin: 0 0 .30em;
  content: '';
  transition: -webkit-transform 200ms cubic-bezier(0.3, 1.1, 1, 1.1);
  transition: transform 200ms cubic-bezier(0.3, 1.1, 1, 1.1);
  transition: transform 200ms cubic-bezier(0.3, 1.1, 1, 1.1), -webkit-transform 200ms cubic-bezier(0.3, 1.1, 1, 1.1);
  border-radius: .02em;
  background: #3c322b; }

.footer {
  color: rgba(240, 238, 236, 0.8);
  background: #3c322b;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-flex: 1 100vw;
      -ms-flex: 1 100vw;
          flex: 1 100vw;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.header__nav {
  position: fixed;
  z-index: 1;
  background: rgba(240, 238, 236, 0.8); }

.header__nav--head,
.header__nav--basic {
  top: 0;
  width: 100vw;
  height: 2.61803rem;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  .header__nav--head .header__action,
  .header__nav--basic .header__action {
    padding: 0 4.23607vw; }

.header__nav--basic {
  -webkit-flex-flow: row-reverse;
      -ms-flex-flow: row-reverse;
          flex-flow: row-reverse; }

.header__nav--offcanvas {
  top: 2.61803rem;
  left: -17.94427rem;
  overflow: scroll;
  width: 70vw;
  max-width: 17.94427rem;
  height: 100vh;
  padding: 1.61803rem;
  transition: all 400ms ease-in-out; }

.switch:checked ~ .header__nav--offcanvas {
  left: 0; }

.header__action,
.header__form {
  color: #3c322b; }

.header__action {
  display: inline-block;
  cursor: pointer; }

.header__logo {
  width: 1.5em;
  height: 1em;
  vertical-align: center;
  fill: currentColor; }

.header__dropdown {
  overflow: hidden;
  padding-left: 1.61803rem;
  transition: all 200ms ease-in-out;
  opacity: 0;
  -webkit-flex: 0 0 0;
      -ms-flex: 0 0 0;
          flex: 0 0 0; }

.switch:checked ~ .header__dropdown {
  overflow: scroll;
  min-height: 6.8541rem;
  opacity: 1; }

.switch:checked ~ .header__dropdown,.header__form{
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.header__form {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.header__input {
  -webkit-flex: 0 30vw;
      -ms-flex: 0 30vw;
          flex: 0 30vw; }

.header__input:focus {
  -webkit-flex: 0 100%;
      -ms-flex: 0 100%;
          flex: 0 100%; }

.billboard {
  min-height: 100vh;
  -webkit-flex: 1 100vw;
      -ms-flex: 1 100vw;
          flex: 1 100vw;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.billboard--attention {
  display: none; }

#suggest-music-switch:checked ~ .billboard--attention {
  position: fixed;
  z-index: 2;
  top: 0;
  right: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(15, 13, 11, 0.9); }
  #suggest-music-switch:checked ~ .billboard--attention .billboard__content {
    overflow: scroll;
    max-height: 100vh; }

.billboard--default {
  background-blend-mode: difference; }

.billboard--default:nth-of-type(3n + 1) {
  background-color: #5d195b; }

.billboard--default:nth-of-type(3n + 2) {
  background-color: #5b5d19; }

.billboard--default:nth-of-type(3n + 3) {
  background-color: #195b5d; }

.billboard__content {
  width: 60vw;
  max-width: 46.97871rem;
  padding: 4.23607rem;
  background: rgba(240, 238, 236, 0.8);
  -webkit-flex: 1 29.03444rem;
      -ms-flex: 1 29.03444rem;
          flex: 1 29.03444rem; }

.billboard__title,.billboard__text {
  -webkit-flex: 1 auto;
      -ms-flex: 1 auto;
          flex: 1 auto; }

.billboard__form {
  -webkit-flex: 5;
      -ms-flex: 5;
          flex: 5; }

.billboard__cta {
  background: #a9201c; }

.billboard__button--decline {
  background: #3c322b; }

.card {
  padding: 1.61803rem 0;
  transition: padding 400ms ease-out, opacity 400ms 400ms, -webkit-transform 400ms ease-out;
  transition: padding 400ms ease-out, transform 400ms ease-out, opacity 400ms 400ms;
  transition: padding 400ms ease-out, transform 400ms ease-out, opacity 400ms 400ms, -webkit-transform 400ms ease-out;
  text-align: center;
  -webkit-flex: 1 100vw;
      -ms-flex: 1 100vw;
          flex: 1 100vw; }

.card,.card__img-container{
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.card__img-container {
  overflow: hidden;
  max-height: 100vh; }

.card__title {
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end;
  -webkit-flex: 1 2.61803em;
      -ms-flex: 1 2.61803em;
          flex: 1 2.61803em; }

.card__subtitle {
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  color: #544b45;
  -webkit-flex: 1 1.61803em;
      -ms-flex: 1 1.61803em;
          flex: 1 1.61803em; }

.card__title,
.card__subtitle {
  overflow: hidden; }

.card__about {
  -webkit-flex: 1 2.61803em;
      -ms-flex: 1 2.61803em;
          flex: 1 2.61803em; }

.card:nth-child(6n + 1) .card__button {
  background-color: #201ca9; }

.card:nth-child(6n + 2) .card__button {
  background-color: #a91ca5; }

.card:nth-child(6n + 3) .card__button {
  background-color: #a9201c; }

.card:nth-child(6n + 4) .card__button {
  background-color: #a5a91c; }

.card:nth-child(6n + 5) .card__button {
  background-color: #1ca920; }

.card:nth-child(6n + 6) .card__button {
  background-color: #1ca5a9; }

.card__button,
.card__button--decline {
  background-blend-mode: difference; }

.card__button--decline {
  background-color: #544b45; }

#lang-it:checked ~ section .card:not(:lang(it)), #lang-es:checked ~ section .card:not(:lang(es)), #lang-fr:checked ~ section .card:not(:lang(fr)), #lang-mn:checked ~ section .card:not(:lang(mn)) {
  overflow: hidden;
  padding: 0;
  transition: padding 0ms 400ms ease-out, opacity 400ms, -webkit-flex 0ms 400ms ease-out, -webkit-transform 0ms 400ms ease-out;
  transition: flex 0ms 400ms ease-out, padding 0ms 400ms ease-out, transform 0ms 400ms ease-out, opacity 400ms;
  transition: flex 0ms 400ms ease-out, padding 0ms 400ms ease-out, transform 0ms 400ms ease-out, opacity 400ms, -webkit-flex 0ms 400ms ease-out, -ms-flex 0ms 400ms ease-out, -webkit-transform 0ms 400ms ease-out;
  -webkit-transform: scale(0, 0);
      -ms-transform: scale(0, 0);
          transform: scale(0, 0);
  opacity: 0;
  -webkit-flex: 0 0 0;
      -ms-flex: 0 0 0;
          flex: 0 0 0; }

#lang-it:checked ~ header label[for='lang-it'], #lang-es:checked ~ header label[for='lang-es'], #lang-fr:checked ~ header label[for='lang-fr'], #lang-mn:checked ~ header label[for='lang-mn'], #lang-all:checked ~ header label[for='lang-all'] {
  position: relative; }
  #lang-it:checked ~ header label[for='lang-it']::before, #lang-es:checked ~ header label[for='lang-es']::before, #lang-fr:checked ~ header label[for='lang-fr']::before, #lang-mn:checked ~ header label[for='lang-mn']::before, #lang-all:checked ~ header label[for='lang-all']::before {
    position: absolute;
    top: .23em;
    left: -1.2em; }

.billboard__cta, .billboard__button--decline, .card__button,
.card__button--decline {
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
  text-transform: uppercase;
  border: 0; }

.card__button,
.card__button--decline {
  padding: 0.38197rem 1.61803rem; }

.billboard__cta, .billboard__button--decline {
  padding: 0.61803em 2.61803em; }

.header__input,
.form__input {
  display: block;
  color: #3c322b;
  border: 1px solid rgba(20, 13, 10, 0.2);
  background-color: #f9f9ff;
  -webkit-appearance: none;
  -moz-appearance: none; }

.card__button,
.card__button--decline, .header__action,
.header__form, .billboard__cta, .billboard__button--decline {
  text-decoration: none; }

.header__action:hover,
.header__form:hover, .billboard__cta:hover, .billboard__button--decline:hover, .card__button:hover,
.card__button--decline:hover,
.header__action:focus,
.header__form:focus,
.billboard__cta:focus,
.billboard__button--decline:focus,
.card__button:focus,
.card__button--decline:focus,
.header__action:active,
.header__form:active,
.billboard__cta:active,
.billboard__button--decline:active,
.card__button:active,
.card__button--decline:active {
  opacity: .8; }

.billboard__cta:hover, .billboard__button--decline:hover, .card__button:hover,
.card__button--decline:hover,
.billboard__cta:focus,
.billboard__button--decline:focus,
.card__button:focus,
.card__button--decline:focus,
.billboard__cta:active,
.billboard__button--decline:active,
.card__button:active,
.card__button--decline:active {
  color: #f9f9ff; }

.svg--inline {
  display: none; }

.card__img {
  width: 100%;
  height: auto;
  vertical-align: middle; }

@font-face {
  font-family: 'icomoon';
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/icomoon.eot");
  src: url("../fonts/icomoon.eot#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf") format("truetype"), url("../fonts/icomoon.woff") format("woff"), url("../fonts/icomoon.svg#icomoon") format("svg"); }

#lang-it:checked ~ header label[for='lang-it']::before, #lang-es:checked ~ header label[for='lang-es']::before, #lang-fr:checked ~ header label[for='lang-fr']::before, #lang-mn:checked ~ header label[for='lang-mn']::before, #lang-all:checked ~ header label[for='lang-all']::before {
  font-family: 'icomoon';
  font-weight: normal;
  font-style: normal;
  font-variant: normal;
  line-height: 1;
  margin: 0 .1em;
  text-transform: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  content: '\e900'; }

.switch {
  position: fixed;
  opacity: 0; }

@media (min-width: 708px){
  .billboard__title{
    font-size: 4.23607rem; }
  .card{
    padding: 4.23607rem;
    -webkit-flex: 1 calc(350px + 4.23607rem);
    -ms-flex: 1 calc(350px + 4.23607rem);
    flex: 1 calc(350px + 4.23607rem); } }

/*# sourceMappingURL=data:application/json;base64, */
